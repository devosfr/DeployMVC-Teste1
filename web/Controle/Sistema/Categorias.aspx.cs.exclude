using System;
using System.Collections;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Web.Security;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls.WebParts;
using System.Collections.ObjectModel;
using System.Globalization;
using ZepolBO;

using ZepolVO;

public partial class Controle_Cadastro_Categorias : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            CarregarDllSegmentoFilho();
            if (!String.IsNullOrEmpty(Request.QueryString["Codigo"]))
            {
                Codigo = Convert.ToInt32(Request.QueryString["Codigo"].ToString());
                Carregar();
                Pesquisar("id");

            }
            else
            {
                try
                {
                    Pesquisar("id");
                    
                    btnAlterar.Visible = false;
                    btnPesquisar.Visible = true;
                    btnSalvar.Visible = true;
                }
                catch (Exception er)
                {
                    MetodosFE.mostraMensagem(er.Message);
                }
            }
        }

        
    }
    protected virtual void Page_LoadComplete(object sender, EventArgs e)
    {
        string mensagem = MetodosFE.confereMensagem();
        litErro.Text = mensagem != null ? mensagem : "";
    }

    protected void CarregarDllSegmentoFilho()
    {
        try
        {
            //Prenche o drop pai.
            IList<SegmentoFilhoVO> colecaosegmentos = SegmentoFilhoBO.FindAll();

            if (colecaosegmentos.Count > 0)
            {
                ddlRamo.DataSourceID = String.Empty;
                ddlRamo.DataSource = colecaosegmentos;
                ddlRamo.DataTextField = "nome";
                ddlRamo.DataValueField = "id";
                ddlRamo.DataBind();
            }
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message );
        }
    }

    protected void CarregarDllSegmento()
    {
        try
        {
            //Prenche o drop pai.
            IList<SegmentoFilhoVO> colecaosegmentos = SegmentoFilhoBO.FindAll(Convert.ToInt32(ddlRamo.SelectedValue));

            if (colecaosegmentos.Count > 0)
            {
                ddlRamo.DataSourceID = String.Empty;
                ddlRamo.DataSource = colecaosegmentos;
                ddlRamo.DataTextField = "nome";
                ddlRamo.DataValueField = "id";
                ddlRamo.DataBind();
            }
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message);
        }
    }

    protected void Pesquisar(string ordenacao)
    {
        try
        {

            IList<CategoriaVO> colecaoSegmento = CategoriasBO.FindAll();

                gvSegmento.DataSourceID = String.Empty;
                gvSegmento.DataSource = colecaoSegmento;
                gvSegmento.DataBind();
            
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message); 
        }
    }

    protected void Carregar()
    {
        try
        {
            CategoriaVO categoria = new CategoriaVO();
            categoria.id = Codigo;



            categoria = CategoriasBO.FindByID(Codigo);

            if (categoria == null)
            {
                txtID.Text = categoria.id.ToString();
                
                CarregarDllSegmentoFilho();
                ddlRamo.SelectedValue = categoria.id.ToString();
                CarregarDllSegmento();
                ddlSegmento.SelectedValue = categoria.segFilho.id.ToString();
                txtNome.Text = categoria.nome;


                btnSalvar.Visible = false;
                btnPesquisar.Visible = false;
                btnAlterar.Visible = true;
            }
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message); 
        }
    }

    protected void gvSegmento_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        try
        {
            CategoriasBO.Delete(Convert.ToInt32(gvSegmento.DataKeys[e.RowIndex].Value));
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message); 
        }


        gvSegmento.DataBind();
        Pesquisar("id_categoria");
    }

    protected void gvSegmento_Sorting(object sender, GridViewSortEventArgs e)
    {
        string ordenacao = e.SortExpression;
        Pesquisar(ordenacao);
    }
    protected void gvDados_RowEditing(object sender, GridViewEditEventArgs e)
    {

        Codigo = Convert.ToInt32(gvSegmento.DataKeys[e.NewEditIndex].Value);

        var nameValues = HttpUtility.ParseQueryString(Request.QueryString.ToString());
        nameValues.Set("Codigo", Codigo.ToString());
        string url = Request.Url.AbsolutePath;
        //nameValues.Remove("Codigo");
        string updatedQueryString = "?" + nameValues.ToString();
        string urlFinal = url + updatedQueryString;
        e.Cancel = true;
        Response.Redirect(urlFinal,false);

        //Carregar();

    }

    protected void btnPesquisar_Click(object sender, EventArgs e)
    {
        Pesquisar("id_categoria");
    }

    protected void btnSalvar_Click(object sender, EventArgs e)
    {
        try
        {
            CategoriaVO categoria = new CategoriaVO();

            if (txtNome.Text != "")
            {

                //txtID.Text = categoria.id.ToString();
                //categoria.id = Convert.ToInt32(txtID.Text);
                categoria.idSegmentoFilho = Convert.ToInt32(ddlSegmento.SelectedValue);
                categoria.id = Convert.ToInt32(ddlRamo.SelectedValue);
                categoria.nome = txtNome.Text;
                CategoriasBO.Insert(categoria);
                this.Limpar();

            }
            else
            {
                MetodosFE.mostraMensagem(" Verifique campos descrição, Segmento obrigatórios."); 
            }
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message);
        }
    }

    protected void btnAlterar_Click(object sender, EventArgs e)
    {
        try
        {
            CategoriaVO categoria = new CategoriaVO();

            if (txtNome.Text != "")
            {
                txtID.Text = categoria.id.ToString();
                categoria.id = Convert.ToInt32(txtID.Text);
                categoria.idSegmentoFilho = Convert.ToInt32(ddlSegmento.SelectedValue);
                categoria.id = Convert.ToInt32(ddlRamo.SelectedValue);
                categoria.nome = txtNome.Text;
                CategoriasBO.Insert(categoria);
                this.Limpar();
            }
            else
            {
                MetodosFE.mostraMensagem(" Verifique campos descrição, Segmento obrigatórios.");
            }
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message);
        }
    }

    protected void btnCancelar_Click(object sender, EventArgs e)
    {
        try
        {
            this.Limpar();
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message);
        }
    }

    protected void Limpar()
    {

        var nameValues = HttpUtility.ParseQueryString(Request.QueryString.ToString());
        MetodosFE.recuperaMensagem();
        nameValues.Remove("Codigo");
        string url = Request.Url.AbsolutePath;
        //nameValues.Remove("Codigo");
        string updatedQueryString = "";
        if (nameValues.Count > 0)
            updatedQueryString = "?" + nameValues.ToString();

        string urlFinal = url + updatedQueryString;
        Response.Redirect(urlFinal, false);

    }

    #region Guardamos o Código no ViewState
    private int Codigo
    {
        get
        {
            if (ViewState["Codigo"] == null) ViewState["Codigo"] = 0;
            return (Int32)ViewState["Codigo"];
        }
        set { ViewState["Codigo"] = value; }
    }
    #endregion

    protected void gvSegmento_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {

        }
    }

    protected void gvSegmento_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        try
        {
            gvSegmento.PageIndex = e.NewPageIndex;
            Pesquisar("id_categoria");
        }
        catch (Exception er)
        {
            MetodosFE.mostraMensagem(er.Message);
        }
    }
}
